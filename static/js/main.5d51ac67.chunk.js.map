{"version":3,"sources":["logo.svg","uiElements/Author.js","info/index.js","components/TaskesHeader.js","components/TaskesFooter.js","components/ToggleControlBtn.js","components/Task.js","components/Tasks.js","components/TaskesBody.js","components/AddTask.js","staticData.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Author","_ref","info","react_default","a","createElement","className","src","img","alt","name","lastName","job","TaskesHeader","props","uiElements_Author","onClick","TaskesFooter","tasksCompleted","ToggleControlBtn","controleState","onEdit","onComplete","onDelete","onMouseEnter","toggleControle","Task","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ShowControle","setState","showControle","console","log","hideControle","state","taskCompleted","completed","concat","onMouseLeave","time","title","components_ToggleControlBtn","Component","Tasks","data","map","el","components_Task","key","id","TaskesBody","components_Tasks","tasks","ViewAddTask","toggle","open","clearInput","onClose","newTask","validInput","verifyInput","length","handleOnAddTask","onAddTask","bind","assertThisInitialized","onChangneHandelerTime","onChangneHandelerTitle","e","target","value","objectSpread","_this2","onChange","type","placeholder","disabled","App","AddTask","tasksLength","task","prevState","toConsumableArray","openModal","toggleModal","filter","modalState","components_TaskesHeader","components_TaskesBody","components_TaskesFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d51ac67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\n\r\nconst Author = ({info}) => {\r\n   \r\n    return(\r\n      <div className=\"header\">\r\n     <img src={info.img} alt=\"\" />\r\n        <div className=\"info\">\r\n            <h3>{info.name} {info.lastName}</h3>\r\n            <span>{info.job}</span>\r\n        </div>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Author"," const info=\r\n    {\r\n        name :'adnen',\r\n        lastName:'rebai',\r\n        job :'Frontend Developer',\r\n        img :'https://adnenre.github.io/images/adnen.jpg'\r\n    }\r\nexport default info","import React ,{ Component }from 'react'\r\nimport Author from '../uiElements/Author'\r\nimport info from '../info'\r\n\r\nconst TaskesHeader = (props) =>{\r\n        return(  \r\n        <div className=\"header-container\">\r\n        <Author info={info} />\r\n            <div className=\"triangle\">\r\n            <span className=\"t-text\">My Tasks</span>\r\n       </div>\r\n       \r\n       <button className=\"btn-add-task\" onClick={props.onClick}>+</button>\r\n     </div>)\r\n   \r\n\r\n}\r\n\r\nexport default TaskesHeader;","import React from 'react'\r\n\r\n\r\nconst TaskesFooter = ({tasksCompleted}) => {\r\n        return(<div className=\"footer\">\r\n        <span className=\"tCompleted\">{tasksCompleted} Tasks Completeds</span>\r\n        \r\n      </div>)\r\n    }\r\n\r\n\r\n\r\nexport default TaskesFooter;","import React ,{Component}from 'react'\r\n\r\n\r\nconst ToggleControlBtn =(props) =>{\r\n        return(\r\n         <div className=\"activity-controle inline\">\r\n          <div className=\"controle\">\r\n                {props.controleState &&  <div  className=\"operator\">\r\n                        <button onClick={props.onEdit} className=\"c-icon-op tl edit\"><i className=\"fa fa-pencil\"></i></button>\r\n                        <button onClick={props.onComplete} className=\"c-icon-op check\"><i  className=\"fa fa-check\"></i></button>\r\n                        <button onClick={props.onDelete} className=\"c-icon-op tl delete\"><i  className=\"fa fa-trash-o\"></i></button>\r\n            \r\n                </div>}\r\n           <button onMouseEnter={props.toggleControle}  className=\"c-icon\"><i className=\"fa fa-cog\"></i></button>\r\n           \r\n           \r\n        </div>\r\n       </div>\r\n        )\r\n     \r\n} \r\n\r\nexport default ToggleControlBtn","import React ,{Component} from 'react';\r\nimport ToggleControlBtn from './ToggleControlBtn'\r\nclass Task extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            showControle:false\r\n        }\r\n    }\r\n    ShowControle=()=>{\r\n        this.setState({showControle:true})\r\n        console.log('mouseenter')\r\n    }\r\n    hideControle =()=>{\r\n        this.setState({showControle:false})\r\n    }\r\n    render(){\r\n         const taskCompleted = !this.props.completed?'':'active';\r\n        return(\r\n            <div  className={\"activity-container \".concat(taskCompleted) } \r\n            onMouseLeave={this.hideControle}\r\n            \r\n            >\r\n            <div className=\"activity-data inline\">\r\n                <span>{this.props.time}</span>\r\n                <h3 className=\"a-text\">{this.props.title} </h3>\r\n            </div>\r\n            <ToggleControlBtn \r\n            onDelete={this.props.onDelete}\r\n            onEdit={this.props.onEdit}\r\n            onComplete ={this.props.onComplete}\r\n            toggleControle={this.ShowControle} \r\n            controleState={this.state.showControle}/>\r\n       </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task;","import React ,{Component}from 'react'\r\nimport Task from './Task';\r\n\r\nclass Tasks extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        \r\n    }\r\n    render(){\r\n       const data = this.props.data\r\n      \r\n        return(\r\n            <div>\r\n                {\r\n                  data.map((el) => <Task\r\n                                    key={el.id}\r\n                                    title={el.title}\r\n                                    time={el.time}\r\n                                    completed={el.completed} \r\n                                    onDelete={() => this.props.onDelete(el.id)}\r\n                                    onEdit={() =>this.props.onEdit(el.id)}\r\n                                    onComplete={() =>this.props.onComplete(el.id)}\r\n                                />\r\n                           )    \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Tasks;","import React ,{ Component }from 'react'\r\nimport Tasks from './Tasks'\r\n\r\n\r\n\r\nclass TaskesBody extends Component{\r\n      \r\n      render(){\r\n        return <Tasks \r\n        data={this.props.tasks}\r\n        onDelete={(id) => this.props.onDelete(id)}\r\n        onEdit={(id) => this.props.onEdit(id)}\r\n        onComplete={(id)=>this.props.onComplete(id)}\r\n        /> \r\n      }\r\n    }\r\n\r\nexport default TaskesBody;","import React , { Component } from 'react';\r\n\r\nclass ViewAddTask extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            open :this.props.open,\r\n            validInput :false,\r\n            newTask :{\r\n                time :'',\r\n                title:''\r\n            }\r\n        }\r\n        this.toggle = this.toggle.bind(this)\r\n        this.onChangneHandelerTime = this.onChangneHandelerTime.bind(this)\r\n        this.onChangneHandelerTitle = this.onChangneHandelerTitle.bind(this)\r\n    \r\n    }\r\n    toggle = () =>{\r\n       \r\n        this.setState({open:!this.state.open})\r\n        this.clearInput()\r\n        this.props.onClose()\r\n    }\r\n   \r\n    componentWillReceiveProps({open}){\r\n        this.setState({open})\r\n    }\r\n    onChangneHandelerTime(e){\r\n    \r\n        let time = e.target.value\r\n        let newTask = {...this.state.newTask,time}\r\n        this.setState({newTask})\r\n        this.verifyInput()\r\n    }\r\n    onChangneHandelerTitle(e){\r\n        let title = e.target.value\r\n        let newTask = {...this.state.newTask,title}\r\n        this.setState({newTask})  \r\n        this.verifyInput() \r\n    }\r\n    clearInput = () =>{\r\n        let newTask={time:'',title:''}\r\n        this.setState({newTask,validInput:false})\r\n        \r\n       \r\n    }\r\n    verifyInput =()=>{\r\n        let newTask = this.state.newTask;\r\n        if(newTask.time.length > 0 && newTask.title.length > 0){\r\n           this.setState({validInput:true})\r\n         }else{\r\n            this.setState({validInput:false})\r\n         }\r\n \r\n    }\r\n    handleOnAddTask = () =>{\r\n        \r\n        this.props.onAddTask(this.state.newTask)\r\n        this.clearInput()\r\n       \r\n    }\r\n\r\n    render(){\r\n        const newTask = this.state.newTask\r\n        return( \r\n              <div className=\"modal-top-container\">\r\n            \r\n            {this.state.open &&    <div className=\"container-modal\">\r\n                    <div className=\"modal\">\r\n                  \r\n                        <div className=\"modal-header\">\r\n                            Add Task\r\n                            <button onClick={this.toggle} className=\"modal-close\">x</button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <input \r\n                              value = {newTask.time}\r\n                              onChange={(e) => this.onChangneHandelerTime(e)}\r\n                              type=\"time\" />\r\n                            <input  value = {newTask.title}\r\n                              onChange={(e) => this.onChangneHandelerTitle(e)}\r\n                              type=\"text\" placeholder=\"Name ...\"/>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button className=\"btn btn-primary\"\r\n                            onClick={this.handleOnAddTask }\r\n                            disabled ={!this.state.validInput}\r\n                            > \r\n                            Add Task</button>\r\n                            <button className=\"btn btn-danger\"\r\n                            onClick={this.toggle}>\r\n                            Cancel</button>\r\n                        </div>\r\n                    </div>\r\n                </div>} \r\n                \r\n                </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default ViewAddTask;\r\n","const tasks = [\r\n    { \r\n      id:1,\r\n      time:\"08:35\",\r\n      title:\"play with GraphQl\",\r\n      completed:false\r\n    },\r\n    { \r\n      id:2,\r\n      time:\"14:00\",\r\n      title:\"Meeting\",\r\n      completed:true\r\n    }\r\n    ,\r\n    { \r\n      id:3,\r\n      time:\"16:00\",\r\n      title:\"Testing application\",\r\n      completed:false\r\n    },\r\n    { \r\n      id:4,\r\n      time:\"16:00\",\r\n      title:\"Play with React\",\r\n      completed:false\r\n    },\r\n    { \r\n      id:5,\r\n      time:\"18:00\",\r\n      title:\"Time for coffe\",\r\n      completed:true\r\n    }\r\n  ];\r\n\r\n  export default tasks;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TaskesHeader from './components/TaskesHeader';\n\nimport TaskesFooter from './components/TaskesFooter'\nimport TaskesBody from './components/TaskesBody';\nimport ViewAddTask from './components/AddTask';\nimport tasks from './staticData.js'\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state={\n      tasks,\n      openModal:false\n    }\n    this.toggleModal = this.toggleModal.bind(this)\n  }\n  onDelete(id){\n    let tasks = this.state.tasks.filter((el)=> el.id!==id)\n    this.setState({tasks})\n  }\n  onComplete(id){\n    let tasks = this.state.tasks\n        tasks.map(el => {\n          if(el.id === id)\n          el.completed =!el.completed\n        })\n       \n    this.setState({tasks})\n  }\n  AddTask=(newTask)=>{\n    let tasksLength = this.state.tasks.length\n    let newId = this.state.tasks[tasksLength-1].id + 1;\n    let task = { \n      id:newId,\n      time:newTask.time,\n      title:newTask.title,\n      completed:false\n    }\n    \n   if(task.time !== '' && task.title !=''){\n      this.setState(prevState => ({tasks:[...prevState.tasks,task]}))\n   }else{\n     \n   }\n  \n   \n  }\n  toggleModal(){\n   this.setState(prevState => ({openModal:!prevState.openModal}))\n  \n  }\n  render() {\n    const modalState = this.state.openModal\n    const tasks = this.state.tasks;\n    const tasksLength = tasks.length\n    const completed = tasks.filter(el =>el.completed).length\n    return (\n      <div className=\"container\">\n        <div className=\"task-container\">\n        \n        <TaskesHeader onClick={this.toggleModal}/>\n       \n        <ViewAddTask \n        open={modalState}\n        onClose={() => this.toggleModal()}\n        onAddTask={(newTask)=>this.AddTask(newTask)}\n        />\n        \n        <TaskesBody \n            tasks={tasks}\n            onDelete={(id)=>this.onDelete(id)}\n            onEdit={() => console.log('Edit Task')}\n            onComplete={(id) =>this.onComplete(id)}\n        />\n        <TaskesFooter tasksCompleted={ completed +'/'+ tasksLength }/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}